# -*- coding: utf-8 -*-
"""BhojanBridge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hBXApL1EqQQzCy3eNT24JrSQGevfvIU0
"""

import numpy as np
import pandas as pd

restaurants = pd.read_csv('/content/sample_data/Swiggy_Nagpur.csv')

restaurants.head()

restaurants.head(1)['Category'].values

restaurants.shape

restaurants = restaurants[['id','Restaurant Name','Category','Rating','Area','Locality','Veg','Long Distance Delivery']]
restaurants.head()

restaurants.isnull().sum()

restaurants.dropna(inplace=True)

restaurants.isnull().sum()

restaurants.duplicated().sum()

restaurants.iloc[0].Category

result = restaurants.dtypes
result

restaurants.head()

restaurants['Category']=restaurants['Category'].apply(lambda x: [cat.strip() for cat in str(x).split(',')] if not pd.isna(x) else [])

restaurants['Category']=restaurants['Category'].apply(lambda x : [i.replace(" ","") for i in x])

restaurants['Locality'] = restaurants['Locality'].str.replace(" ", "")

restaurants['Area'] = restaurants['Area'].str.strip().str.replace(" ", "")

restaurants.head()

# Convert non-string columns to strings
restaurants['Category'] = restaurants['Category'].astype(str)
restaurants['Rating'] = restaurants['Rating'].astype(str)
restaurants['Area'] = restaurants['Area'].astype(str)
restaurants['Locality'] = restaurants['Locality'].astype(str)
restaurants['Veg'] = restaurants['Veg'].astype(str)
restaurants['Distance Delivery'] = restaurants['Distance Delivery'].astype(str)

# Concatenate the columns
restaurants['tags'] = restaurants['Category'] + restaurants['Rating'].astype(str) + restaurants['Area'] + restaurants['Locality'] + restaurants['Veg'].astype(str) + restaurants['Distance Delivery'].astype(str)

restaurants.head()

new_df = restaurants[['id','Restaurant Name','tags']]

new_df['tags'] = new_df['tags'].apply(lambda x : "".join(x))

new_df.head()

new_df['tags'][0]

new_df['tags'] = new_df['tags'].str.lower()

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer(max_features=10000, stop_words='english')
vector = tfidf.fit_transform(new_df['tags']).toarray()



